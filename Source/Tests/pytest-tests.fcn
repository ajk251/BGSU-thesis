
:import test_functions -from add

Domain Xvalues Integers -10 10 -nrandom 100
Domain Yvalues Integers -10 10 -nrandom 100
Domain Zvalues Numbers -1000 1000
Domain Avalues Boundary -10 10

Assert add:
  | :message "Test the add fn"
  | (1,2,3) is-int?                 ~~ "Does this even work?"
  | (4,5,6) > 0                     ~~ "Does *this* even work?"
  ;

Assert add2:
  | :message "This is a test of some random stuff"
  | (1,2,3) > 4
  | (1, 2, three=3, four=4) ≠ 5
  |> `x = 1 + 2`
  | (1, `[2.0]`, three=3.0) float?
  ;

Test add Xvalues Yvalues:
  | :method ART -initial [0,0,0]
  | :labels [x y z] :suffix _i
  | :message 'here I am testing to see if it works and it is the one with >'
  | is-int? or is-float?        ~~ "This is the error"
  | > 1                         ~~ "This is another problem"
  | between? -100 100
  |> `x = x_i + y_i + 1.0`
  |> x is-float?
  ;

Test add Xvalues Zvalues:
  | is-int? ∨ is-float?
  | ≥ 0.0 ∨ ≤ 1.0
  | between? 0 1 ∧ is-float?
  | between? -100 100
  ;

Groupby addg Xvalues:
  | 'a' is-float?
  | 'b' is-int?
  | 'c' positive?
  | 'd' > 1
  ;

Groupby addf Xvalues -> bin_fn:
  | 'a' is-float?
  | 'b' is-int?
  | 'c' positive?
  | 'd' between? 0 1
  | 'e' >= 1
  ;

