# Generated from /media/aaron/Shared2/School/BGSU-thesis/Source/Falcon/lang/Falcon.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,43,390,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,1,0,1,
        0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,
        12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,3,16,166,8,16,1,
        17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,
        22,1,22,3,22,183,8,22,1,23,1,23,1,23,1,23,1,23,1,23,3,23,191,8,23,
        1,24,1,24,1,24,1,24,1,24,3,24,198,8,24,1,25,1,25,1,25,1,25,3,25,
        204,8,25,1,26,1,26,1,26,5,26,209,8,26,10,26,12,26,212,9,26,1,27,
        1,27,1,27,5,27,217,8,27,10,27,12,27,220,9,27,1,28,1,28,3,28,224,
        8,28,1,28,1,28,1,28,1,28,5,28,230,8,28,10,28,12,28,233,9,28,1,29,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,243,8,29,1,30,1,30,1,31,
        1,31,1,31,1,31,1,31,3,31,252,8,31,1,32,1,32,1,32,3,32,257,8,32,1,
        33,1,33,3,33,261,8,33,1,33,1,33,1,33,5,33,266,8,33,10,33,12,33,269,
        9,33,1,34,3,34,272,8,34,1,34,4,34,275,8,34,11,34,12,34,276,1,34,
        3,34,280,8,34,1,34,4,34,283,8,34,11,34,12,34,284,1,34,1,34,5,34,
        289,8,34,10,34,12,34,292,9,34,1,34,3,34,295,8,34,1,34,5,34,298,8,
        34,10,34,12,34,301,9,34,1,34,1,34,4,34,305,8,34,11,34,12,34,306,
        3,34,309,8,34,1,35,1,35,5,35,313,8,35,10,35,12,35,316,9,35,1,35,
        1,35,1,35,5,35,321,8,35,10,35,12,35,324,9,35,1,35,3,35,327,8,35,
        1,36,1,36,5,36,331,8,36,10,36,12,36,334,9,36,1,36,1,36,1,37,1,37,
        1,37,1,37,1,37,5,37,343,8,37,10,37,12,37,346,9,37,1,37,1,37,1,37,
        1,37,1,38,1,38,1,39,1,39,1,39,1,39,5,39,358,8,39,10,39,12,39,361,
        9,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,5,40,371,8,40,10,40,
        12,40,374,9,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,
        1,42,1,43,1,43,1,44,1,44,6,314,322,332,344,359,372,0,45,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
        15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
        26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
        37,75,38,77,39,79,40,81,41,83,42,85,43,87,0,89,0,1,0,10,3,0,33,33,
        172,172,65506,65506,2,0,45,45,95,95,5,0,35,35,95,95,8450,8450,8477,
        8477,8484,8484,11,0,38,38,42,43,45,46,61,61,63,63,95,95,247,247,
        8734,8734,8800,8800,10799,10799,65515,65515,3,0,60,60,62,62,8804,
        8805,7,0,38,38,43,43,45,45,63,63,95,95,126,126,65515,65515,2,0,43,
        43,45,45,1,0,48,57,3,0,9,10,13,13,32,32,2,0,65,90,97,122,431,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
        0,0,0,83,1,0,0,0,0,85,1,0,0,0,1,91,1,0,0,0,3,94,1,0,0,0,5,101,1,
        0,0,0,7,103,1,0,0,0,9,105,1,0,0,0,11,110,1,0,0,0,13,117,1,0,0,0,
        15,124,1,0,0,0,17,132,1,0,0,0,19,140,1,0,0,0,21,150,1,0,0,0,23,152,
        1,0,0,0,25,154,1,0,0,0,27,156,1,0,0,0,29,158,1,0,0,0,31,160,1,0,
        0,0,33,165,1,0,0,0,35,167,1,0,0,0,37,169,1,0,0,0,39,172,1,0,0,0,
        41,175,1,0,0,0,43,178,1,0,0,0,45,182,1,0,0,0,47,190,1,0,0,0,49,197,
        1,0,0,0,51,203,1,0,0,0,53,205,1,0,0,0,55,213,1,0,0,0,57,223,1,0,
        0,0,59,242,1,0,0,0,61,244,1,0,0,0,63,251,1,0,0,0,65,256,1,0,0,0,
        67,260,1,0,0,0,69,308,1,0,0,0,71,326,1,0,0,0,73,328,1,0,0,0,75,337,
        1,0,0,0,77,351,1,0,0,0,79,353,1,0,0,0,81,366,1,0,0,0,83,380,1,0,
        0,0,85,384,1,0,0,0,87,386,1,0,0,0,89,388,1,0,0,0,91,92,5,126,0,0,
        92,93,5,126,0,0,93,2,1,0,0,0,94,95,5,68,0,0,95,96,5,111,0,0,96,97,
        5,109,0,0,97,98,5,97,0,0,98,99,5,105,0,0,99,100,5,110,0,0,100,4,
        1,0,0,0,101,102,5,91,0,0,102,6,1,0,0,0,103,104,5,93,0,0,104,8,1,
        0,0,0,105,106,5,84,0,0,106,107,5,101,0,0,107,108,5,115,0,0,108,109,
        5,116,0,0,109,10,1,0,0,0,110,111,5,65,0,0,111,112,5,115,0,0,112,
        113,5,115,0,0,113,114,5,101,0,0,114,115,5,114,0,0,115,116,5,116,
        0,0,116,12,1,0,0,0,117,118,5,87,0,0,118,119,5,105,0,0,119,120,5,
        110,0,0,120,121,5,110,0,0,121,122,5,111,0,0,122,123,5,119,0,0,123,
        14,1,0,0,0,124,125,5,71,0,0,125,126,5,114,0,0,126,127,5,111,0,0,
        127,128,5,117,0,0,128,129,5,112,0,0,129,130,5,98,0,0,130,131,5,121,
        0,0,131,16,1,0,0,0,132,133,5,83,0,0,133,134,5,97,0,0,134,135,5,116,
        0,0,135,136,5,105,0,0,136,137,5,115,0,0,137,138,5,102,0,0,138,139,
        5,121,0,0,139,18,1,0,0,0,140,141,5,80,0,0,141,142,5,97,0,0,142,143,
        5,114,0,0,143,144,5,116,0,0,144,145,5,105,0,0,145,146,5,116,0,0,
        146,147,5,105,0,0,147,148,5,111,0,0,148,149,5,110,0,0,149,20,1,0,
        0,0,150,151,5,40,0,0,151,22,1,0,0,0,152,153,5,41,0,0,153,24,1,0,
        0,0,154,155,5,123,0,0,155,26,1,0,0,0,156,157,5,125,0,0,157,28,1,
        0,0,0,158,159,5,44,0,0,159,30,1,0,0,0,160,161,5,59,0,0,161,32,1,
        0,0,0,162,163,5,58,0,0,163,166,5,61,0,0,164,166,5,8788,0,0,165,162,
        1,0,0,0,165,164,1,0,0,0,166,34,1,0,0,0,167,168,5,124,0,0,168,36,
        1,0,0,0,169,170,5,124,0,0,170,171,5,62,0,0,171,38,1,0,0,0,172,173,
        5,124,0,0,173,174,5,33,0,0,174,40,1,0,0,0,175,176,5,124,0,0,176,
        177,5,37,0,0,177,42,1,0,0,0,178,179,5,58,0,0,179,44,1,0,0,0,180,
        183,3,47,23,0,181,183,3,49,24,0,182,180,1,0,0,0,182,181,1,0,0,0,
        183,46,1,0,0,0,184,191,5,8743,0,0,185,186,5,38,0,0,186,191,5,38,
        0,0,187,188,5,97,0,0,188,189,5,110,0,0,189,191,5,100,0,0,190,184,
        1,0,0,0,190,185,1,0,0,0,190,187,1,0,0,0,191,48,1,0,0,0,192,198,5,
        8744,0,0,193,194,5,124,0,0,194,198,5,124,0,0,195,196,5,111,0,0,196,
        198,5,114,0,0,197,192,1,0,0,0,197,193,1,0,0,0,197,195,1,0,0,0,198,
        50,1,0,0,0,199,204,7,0,0,0,200,201,5,110,0,0,201,202,5,111,0,0,202,
        204,5,116,0,0,203,199,1,0,0,0,203,200,1,0,0,0,204,52,1,0,0,0,205,
        210,3,43,21,0,206,209,3,89,44,0,207,209,7,1,0,0,208,206,1,0,0,0,
        208,207,1,0,0,0,209,212,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,
        211,54,1,0,0,0,212,210,1,0,0,0,213,218,5,45,0,0,214,217,3,89,44,
        0,215,217,7,1,0,0,216,214,1,0,0,0,216,215,1,0,0,0,217,220,1,0,0,
        0,218,216,1,0,0,0,218,219,1,0,0,0,219,56,1,0,0,0,220,218,1,0,0,0,
        221,224,3,89,44,0,222,224,7,2,0,0,223,221,1,0,0,0,223,222,1,0,0,
        0,224,231,1,0,0,0,225,230,3,89,44,0,226,230,3,87,43,0,227,230,7,
        3,0,0,228,230,3,59,29,0,229,225,1,0,0,0,229,226,1,0,0,0,229,227,
        1,0,0,0,229,228,1,0,0,0,230,233,1,0,0,0,231,229,1,0,0,0,231,232,
        1,0,0,0,232,58,1,0,0,0,233,231,1,0,0,0,234,243,7,4,0,0,235,236,5,
        60,0,0,236,243,5,61,0,0,237,238,5,62,0,0,238,243,5,61,0,0,239,240,
        5,61,0,0,240,243,5,61,0,0,241,243,5,177,0,0,242,234,1,0,0,0,242,
        235,1,0,0,0,242,237,1,0,0,0,242,239,1,0,0,0,242,241,1,0,0,0,243,
        60,1,0,0,0,244,245,5,61,0,0,245,62,1,0,0,0,246,247,5,33,0,0,247,
        252,5,61,0,0,248,249,5,47,0,0,249,252,5,61,0,0,250,252,5,8800,0,
        0,251,246,1,0,0,0,251,248,1,0,0,0,251,250,1,0,0,0,252,64,1,0,0,0,
        253,254,5,45,0,0,254,257,5,62,0,0,255,257,5,8594,0,0,256,253,1,0,
        0,0,256,255,1,0,0,0,257,66,1,0,0,0,258,261,3,89,44,0,259,261,5,95,
        0,0,260,258,1,0,0,0,260,259,1,0,0,0,261,267,1,0,0,0,262,266,3,89,
        44,0,263,266,3,87,43,0,264,266,7,5,0,0,265,262,1,0,0,0,265,263,1,
        0,0,0,265,264,1,0,0,0,266,269,1,0,0,0,267,265,1,0,0,0,267,268,1,
        0,0,0,268,68,1,0,0,0,269,267,1,0,0,0,270,272,7,6,0,0,271,270,1,0,
        0,0,271,272,1,0,0,0,272,274,1,0,0,0,273,275,3,87,43,0,274,273,1,
        0,0,0,275,276,1,0,0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,309,1,
        0,0,0,278,280,7,6,0,0,279,278,1,0,0,0,279,280,1,0,0,0,280,282,1,
        0,0,0,281,283,3,87,43,0,282,281,1,0,0,0,283,284,1,0,0,0,284,282,
        1,0,0,0,284,285,1,0,0,0,285,286,1,0,0,0,286,290,5,46,0,0,287,289,
        7,7,0,0,288,287,1,0,0,0,289,292,1,0,0,0,290,288,1,0,0,0,290,291,
        1,0,0,0,291,309,1,0,0,0,292,290,1,0,0,0,293,295,7,6,0,0,294,293,
        1,0,0,0,294,295,1,0,0,0,295,299,1,0,0,0,296,298,3,87,43,0,297,296,
        1,0,0,0,298,301,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,300,302,
        1,0,0,0,301,299,1,0,0,0,302,304,5,46,0,0,303,305,7,7,0,0,304,303,
        1,0,0,0,305,306,1,0,0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,309,
        1,0,0,0,308,271,1,0,0,0,308,279,1,0,0,0,308,294,1,0,0,0,309,70,1,
        0,0,0,310,314,5,34,0,0,311,313,9,0,0,0,312,311,1,0,0,0,313,316,1,
        0,0,0,314,315,1,0,0,0,314,312,1,0,0,0,315,317,1,0,0,0,316,314,1,
        0,0,0,317,327,5,34,0,0,318,322,5,39,0,0,319,321,9,0,0,0,320,319,
        1,0,0,0,321,324,1,0,0,0,322,323,1,0,0,0,322,320,1,0,0,0,323,325,
        1,0,0,0,324,322,1,0,0,0,325,327,5,39,0,0,326,310,1,0,0,0,326,318,
        1,0,0,0,327,72,1,0,0,0,328,332,5,96,0,0,329,331,9,0,0,0,330,329,
        1,0,0,0,331,334,1,0,0,0,332,333,1,0,0,0,332,330,1,0,0,0,333,335,
        1,0,0,0,334,332,1,0,0,0,335,336,5,96,0,0,336,74,1,0,0,0,337,338,
        5,96,0,0,338,339,5,96,0,0,339,340,5,96,0,0,340,344,1,0,0,0,341,343,
        9,0,0,0,342,341,1,0,0,0,343,346,1,0,0,0,344,345,1,0,0,0,344,342,
        1,0,0,0,345,347,1,0,0,0,346,344,1,0,0,0,347,348,5,96,0,0,348,349,
        5,96,0,0,349,350,5,96,0,0,350,76,1,0,0,0,351,352,2,8704,8959,0,352,
        78,1,0,0,0,353,354,5,47,0,0,354,355,5,47,0,0,355,359,1,0,0,0,356,
        358,9,0,0,0,357,356,1,0,0,0,358,361,1,0,0,0,359,360,1,0,0,0,359,
        357,1,0,0,0,360,362,1,0,0,0,361,359,1,0,0,0,362,363,5,10,0,0,363,
        364,1,0,0,0,364,365,6,39,0,0,365,80,1,0,0,0,366,367,5,47,0,0,367,
        368,5,42,0,0,368,372,1,0,0,0,369,371,9,0,0,0,370,369,1,0,0,0,371,
        374,1,0,0,0,372,373,1,0,0,0,372,370,1,0,0,0,373,375,1,0,0,0,374,
        372,1,0,0,0,375,376,5,42,0,0,376,377,5,47,0,0,377,378,1,0,0,0,378,
        379,6,40,0,0,379,82,1,0,0,0,380,381,7,8,0,0,381,382,1,0,0,0,382,
        383,6,41,0,0,383,84,1,0,0,0,384,385,5,10,0,0,385,86,1,0,0,0,386,
        387,7,7,0,0,387,88,1,0,0,0,388,389,7,9,0,0,389,90,1,0,0,0,35,0,165,
        182,190,197,203,208,210,216,218,223,229,231,242,251,256,260,265,
        267,271,276,279,284,290,294,299,306,308,314,322,326,332,344,359,
        372,1,6,0,0
    ]

class FalconLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    TEST = 5
    ASSERT = 6
    WINNOW = 7
    GROUPBY = 8
    SATISFY = 9
    PARTITION = 10
    LPAREN = 11
    RPAREN = 12
    LBRAC = 13
    RBRAC = 14
    COMMA = 15
    SEMICOLON = 16
    ASSIGN = 17
    BAR = 18
    ABAR = 19
    EBAR = 20
    MBAR = 21
    COLON = 22
    OP_LOGICAL = 23
    OP_AND = 24
    OP_OR = 25
    OP_NOT = 26
    DIRECTIVE = 27
    FNARG = 28
    ID = 29
    OPERATORS = 30
    OP_EQ = 31
    OP_NE = 32
    ARROW = 33
    LABEL = 34
    NUMBER = 35
    STRING = 36
    CODESMNT = 37
    CODEBLOCK = 38
    UMATH = 39
    COMMENT = 40
    MCOMMENT = 41
    WS = 42
    NL = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'~~'", "'Domain'", "'['", "']'", "'Test'", "'Assert'", "'Winnow'", 
            "'Groupby'", "'Satisfy'", "'Partition'", "'('", "')'", "'{'", 
            "'}'", "','", "';'", "'|'", "'|>'", "'|!'", "'|%'", "':'", "'='", 
            "'\\n'" ]

    symbolicNames = [ "<INVALID>",
            "TEST", "ASSERT", "WINNOW", "GROUPBY", "SATISFY", "PARTITION", 
            "LPAREN", "RPAREN", "LBRAC", "RBRAC", "COMMA", "SEMICOLON", 
            "ASSIGN", "BAR", "ABAR", "EBAR", "MBAR", "COLON", "OP_LOGICAL", 
            "OP_AND", "OP_OR", "OP_NOT", "DIRECTIVE", "FNARG", "ID", "OPERATORS", 
            "OP_EQ", "OP_NE", "ARROW", "LABEL", "NUMBER", "STRING", "CODESMNT", 
            "CODEBLOCK", "UMATH", "COMMENT", "MCOMMENT", "WS", "NL" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "TEST", "ASSERT", "WINNOW", 
                  "GROUPBY", "SATISFY", "PARTITION", "LPAREN", "RPAREN", 
                  "LBRAC", "RBRAC", "COMMA", "SEMICOLON", "ASSIGN", "BAR", 
                  "ABAR", "EBAR", "MBAR", "COLON", "OP_LOGICAL", "OP_AND", 
                  "OP_OR", "OP_NOT", "DIRECTIVE", "FNARG", "ID", "OPERATORS", 
                  "OP_EQ", "OP_NE", "ARROW", "LABEL", "NUMBER", "STRING", 
                  "CODESMNT", "CODEBLOCK", "UMATH", "COMMENT", "MCOMMENT", 
                  "WS", "NL", "DIGIT", "CHAR" ]

    grammarFileName = "Falcon.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


