# Generated from /media/aaron/Shared2/School/BGSU-thesis/Source/Falcon/lang/Falcon.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,42,378,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,1,0,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,
        1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,3,15,
        154,8,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,
        1,20,1,20,1,21,1,21,3,21,171,8,21,1,22,1,22,1,22,1,22,1,22,1,22,
        3,22,179,8,22,1,23,1,23,1,23,1,23,1,23,3,23,186,8,23,1,24,1,24,1,
        24,1,24,3,24,192,8,24,1,25,1,25,1,25,5,25,197,8,25,10,25,12,25,200,
        9,25,1,26,1,26,1,26,5,26,205,8,26,10,26,12,26,208,9,26,1,27,1,27,
        3,27,212,8,27,1,27,1,27,1,27,1,27,5,27,218,8,27,10,27,12,27,221,
        9,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,231,8,28,1,29,
        1,29,1,30,1,30,1,30,1,30,1,30,3,30,240,8,30,1,31,1,31,1,31,3,31,
        245,8,31,1,32,1,32,3,32,249,8,32,1,32,1,32,1,32,5,32,254,8,32,10,
        32,12,32,257,9,32,1,33,3,33,260,8,33,1,33,4,33,263,8,33,11,33,12,
        33,264,1,33,3,33,268,8,33,1,33,4,33,271,8,33,11,33,12,33,272,1,33,
        1,33,5,33,277,8,33,10,33,12,33,280,9,33,1,33,3,33,283,8,33,1,33,
        5,33,286,8,33,10,33,12,33,289,9,33,1,33,1,33,4,33,293,8,33,11,33,
        12,33,294,3,33,297,8,33,1,34,1,34,5,34,301,8,34,10,34,12,34,304,
        9,34,1,34,1,34,1,34,5,34,309,8,34,10,34,12,34,312,9,34,1,34,3,34,
        315,8,34,1,35,1,35,5,35,319,8,35,10,35,12,35,322,9,35,1,35,1,35,
        1,36,1,36,1,36,1,36,1,36,5,36,331,8,36,10,36,12,36,334,9,36,1,36,
        1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,5,38,346,8,38,10,38,
        12,38,349,9,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,5,39,359,
        8,39,10,39,12,39,362,9,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,
        1,40,1,41,1,41,1,42,1,42,1,43,1,43,6,302,310,320,332,347,360,0,44,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,0,87,0,1,0,10,3,0,33,
        33,172,172,65506,65506,2,0,45,45,95,95,5,0,35,35,95,95,8450,8450,
        8477,8477,8484,8484,11,0,38,38,42,43,45,46,61,61,63,63,95,95,247,
        247,8734,8734,8800,8800,10799,10799,65515,65515,3,0,60,60,62,62,
        8804,8805,7,0,38,38,43,43,45,45,63,63,95,95,126,126,65515,65515,
        2,0,43,43,45,45,1,0,48,57,3,0,9,10,13,13,32,32,2,0,65,90,97,122,
        419,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
        0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
        0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
        0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
        0,81,1,0,0,0,0,83,1,0,0,0,1,89,1,0,0,0,3,92,1,0,0,0,5,99,1,0,0,0,
        7,101,1,0,0,0,9,103,1,0,0,0,11,108,1,0,0,0,13,115,1,0,0,0,15,122,
        1,0,0,0,17,130,1,0,0,0,19,138,1,0,0,0,21,140,1,0,0,0,23,142,1,0,
        0,0,25,144,1,0,0,0,27,146,1,0,0,0,29,148,1,0,0,0,31,153,1,0,0,0,
        33,155,1,0,0,0,35,157,1,0,0,0,37,160,1,0,0,0,39,163,1,0,0,0,41,166,
        1,0,0,0,43,170,1,0,0,0,45,178,1,0,0,0,47,185,1,0,0,0,49,191,1,0,
        0,0,51,193,1,0,0,0,53,201,1,0,0,0,55,211,1,0,0,0,57,230,1,0,0,0,
        59,232,1,0,0,0,61,239,1,0,0,0,63,244,1,0,0,0,65,248,1,0,0,0,67,296,
        1,0,0,0,69,314,1,0,0,0,71,316,1,0,0,0,73,325,1,0,0,0,75,339,1,0,
        0,0,77,341,1,0,0,0,79,354,1,0,0,0,81,368,1,0,0,0,83,372,1,0,0,0,
        85,374,1,0,0,0,87,376,1,0,0,0,89,90,5,126,0,0,90,91,5,126,0,0,91,
        2,1,0,0,0,92,93,5,68,0,0,93,94,5,111,0,0,94,95,5,109,0,0,95,96,5,
        97,0,0,96,97,5,105,0,0,97,98,5,110,0,0,98,4,1,0,0,0,99,100,5,91,
        0,0,100,6,1,0,0,0,101,102,5,93,0,0,102,8,1,0,0,0,103,104,5,84,0,
        0,104,105,5,101,0,0,105,106,5,115,0,0,106,107,5,116,0,0,107,10,1,
        0,0,0,108,109,5,65,0,0,109,110,5,115,0,0,110,111,5,115,0,0,111,112,
        5,101,0,0,112,113,5,114,0,0,113,114,5,116,0,0,114,12,1,0,0,0,115,
        116,5,87,0,0,116,117,5,105,0,0,117,118,5,110,0,0,118,119,5,110,0,
        0,119,120,5,111,0,0,120,121,5,119,0,0,121,14,1,0,0,0,122,123,5,71,
        0,0,123,124,5,114,0,0,124,125,5,111,0,0,125,126,5,117,0,0,126,127,
        5,112,0,0,127,128,5,98,0,0,128,129,5,121,0,0,129,16,1,0,0,0,130,
        131,5,83,0,0,131,132,5,97,0,0,132,133,5,116,0,0,133,134,5,105,0,
        0,134,135,5,115,0,0,135,136,5,102,0,0,136,137,5,121,0,0,137,18,1,
        0,0,0,138,139,5,40,0,0,139,20,1,0,0,0,140,141,5,41,0,0,141,22,1,
        0,0,0,142,143,5,123,0,0,143,24,1,0,0,0,144,145,5,125,0,0,145,26,
        1,0,0,0,146,147,5,44,0,0,147,28,1,0,0,0,148,149,5,59,0,0,149,30,
        1,0,0,0,150,151,5,58,0,0,151,154,5,61,0,0,152,154,5,8788,0,0,153,
        150,1,0,0,0,153,152,1,0,0,0,154,32,1,0,0,0,155,156,5,124,0,0,156,
        34,1,0,0,0,157,158,5,124,0,0,158,159,5,62,0,0,159,36,1,0,0,0,160,
        161,5,124,0,0,161,162,5,33,0,0,162,38,1,0,0,0,163,164,5,124,0,0,
        164,165,5,37,0,0,165,40,1,0,0,0,166,167,5,58,0,0,167,42,1,0,0,0,
        168,171,3,45,22,0,169,171,3,47,23,0,170,168,1,0,0,0,170,169,1,0,
        0,0,171,44,1,0,0,0,172,179,5,8743,0,0,173,174,5,38,0,0,174,179,5,
        38,0,0,175,176,5,97,0,0,176,177,5,110,0,0,177,179,5,100,0,0,178,
        172,1,0,0,0,178,173,1,0,0,0,178,175,1,0,0,0,179,46,1,0,0,0,180,186,
        5,8744,0,0,181,182,5,124,0,0,182,186,5,124,0,0,183,184,5,111,0,0,
        184,186,5,114,0,0,185,180,1,0,0,0,185,181,1,0,0,0,185,183,1,0,0,
        0,186,48,1,0,0,0,187,192,7,0,0,0,188,189,5,110,0,0,189,190,5,111,
        0,0,190,192,5,116,0,0,191,187,1,0,0,0,191,188,1,0,0,0,192,50,1,0,
        0,0,193,198,3,41,20,0,194,197,3,87,43,0,195,197,7,1,0,0,196,194,
        1,0,0,0,196,195,1,0,0,0,197,200,1,0,0,0,198,196,1,0,0,0,198,199,
        1,0,0,0,199,52,1,0,0,0,200,198,1,0,0,0,201,206,5,45,0,0,202,205,
        3,87,43,0,203,205,7,1,0,0,204,202,1,0,0,0,204,203,1,0,0,0,205,208,
        1,0,0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,54,1,0,0,0,208,206,1,
        0,0,0,209,212,3,87,43,0,210,212,7,2,0,0,211,209,1,0,0,0,211,210,
        1,0,0,0,212,219,1,0,0,0,213,218,3,87,43,0,214,218,3,85,42,0,215,
        218,7,3,0,0,216,218,3,57,28,0,217,213,1,0,0,0,217,214,1,0,0,0,217,
        215,1,0,0,0,217,216,1,0,0,0,218,221,1,0,0,0,219,217,1,0,0,0,219,
        220,1,0,0,0,220,56,1,0,0,0,221,219,1,0,0,0,222,231,7,4,0,0,223,224,
        5,60,0,0,224,231,5,61,0,0,225,226,5,62,0,0,226,231,5,61,0,0,227,
        228,5,61,0,0,228,231,5,61,0,0,229,231,5,177,0,0,230,222,1,0,0,0,
        230,223,1,0,0,0,230,225,1,0,0,0,230,227,1,0,0,0,230,229,1,0,0,0,
        231,58,1,0,0,0,232,233,5,61,0,0,233,60,1,0,0,0,234,235,5,33,0,0,
        235,240,5,61,0,0,236,237,5,47,0,0,237,240,5,61,0,0,238,240,5,8800,
        0,0,239,234,1,0,0,0,239,236,1,0,0,0,239,238,1,0,0,0,240,62,1,0,0,
        0,241,242,5,45,0,0,242,245,5,62,0,0,243,245,5,8594,0,0,244,241,1,
        0,0,0,244,243,1,0,0,0,245,64,1,0,0,0,246,249,3,87,43,0,247,249,5,
        95,0,0,248,246,1,0,0,0,248,247,1,0,0,0,249,255,1,0,0,0,250,254,3,
        87,43,0,251,254,3,85,42,0,252,254,7,5,0,0,253,250,1,0,0,0,253,251,
        1,0,0,0,253,252,1,0,0,0,254,257,1,0,0,0,255,253,1,0,0,0,255,256,
        1,0,0,0,256,66,1,0,0,0,257,255,1,0,0,0,258,260,7,6,0,0,259,258,1,
        0,0,0,259,260,1,0,0,0,260,262,1,0,0,0,261,263,3,85,42,0,262,261,
        1,0,0,0,263,264,1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,297,
        1,0,0,0,266,268,7,6,0,0,267,266,1,0,0,0,267,268,1,0,0,0,268,270,
        1,0,0,0,269,271,3,85,42,0,270,269,1,0,0,0,271,272,1,0,0,0,272,270,
        1,0,0,0,272,273,1,0,0,0,273,274,1,0,0,0,274,278,5,46,0,0,275,277,
        7,7,0,0,276,275,1,0,0,0,277,280,1,0,0,0,278,276,1,0,0,0,278,279,
        1,0,0,0,279,297,1,0,0,0,280,278,1,0,0,0,281,283,7,6,0,0,282,281,
        1,0,0,0,282,283,1,0,0,0,283,287,1,0,0,0,284,286,3,85,42,0,285,284,
        1,0,0,0,286,289,1,0,0,0,287,285,1,0,0,0,287,288,1,0,0,0,288,290,
        1,0,0,0,289,287,1,0,0,0,290,292,5,46,0,0,291,293,7,7,0,0,292,291,
        1,0,0,0,293,294,1,0,0,0,294,292,1,0,0,0,294,295,1,0,0,0,295,297,
        1,0,0,0,296,259,1,0,0,0,296,267,1,0,0,0,296,282,1,0,0,0,297,68,1,
        0,0,0,298,302,5,34,0,0,299,301,9,0,0,0,300,299,1,0,0,0,301,304,1,
        0,0,0,302,303,1,0,0,0,302,300,1,0,0,0,303,305,1,0,0,0,304,302,1,
        0,0,0,305,315,5,34,0,0,306,310,5,39,0,0,307,309,9,0,0,0,308,307,
        1,0,0,0,309,312,1,0,0,0,310,311,1,0,0,0,310,308,1,0,0,0,311,313,
        1,0,0,0,312,310,1,0,0,0,313,315,5,39,0,0,314,298,1,0,0,0,314,306,
        1,0,0,0,315,70,1,0,0,0,316,320,5,96,0,0,317,319,9,0,0,0,318,317,
        1,0,0,0,319,322,1,0,0,0,320,321,1,0,0,0,320,318,1,0,0,0,321,323,
        1,0,0,0,322,320,1,0,0,0,323,324,5,96,0,0,324,72,1,0,0,0,325,326,
        5,96,0,0,326,327,5,96,0,0,327,328,5,96,0,0,328,332,1,0,0,0,329,331,
        9,0,0,0,330,329,1,0,0,0,331,334,1,0,0,0,332,333,1,0,0,0,332,330,
        1,0,0,0,333,335,1,0,0,0,334,332,1,0,0,0,335,336,5,96,0,0,336,337,
        5,96,0,0,337,338,5,96,0,0,338,74,1,0,0,0,339,340,2,8704,8959,0,340,
        76,1,0,0,0,341,342,5,47,0,0,342,343,5,47,0,0,343,347,1,0,0,0,344,
        346,9,0,0,0,345,344,1,0,0,0,346,349,1,0,0,0,347,348,1,0,0,0,347,
        345,1,0,0,0,348,350,1,0,0,0,349,347,1,0,0,0,350,351,5,10,0,0,351,
        352,1,0,0,0,352,353,6,38,0,0,353,78,1,0,0,0,354,355,5,47,0,0,355,
        356,5,42,0,0,356,360,1,0,0,0,357,359,9,0,0,0,358,357,1,0,0,0,359,
        362,1,0,0,0,360,361,1,0,0,0,360,358,1,0,0,0,361,363,1,0,0,0,362,
        360,1,0,0,0,363,364,5,42,0,0,364,365,5,47,0,0,365,366,1,0,0,0,366,
        367,6,39,0,0,367,80,1,0,0,0,368,369,7,8,0,0,369,370,1,0,0,0,370,
        371,6,40,0,0,371,82,1,0,0,0,372,373,5,10,0,0,373,84,1,0,0,0,374,
        375,7,7,0,0,375,86,1,0,0,0,376,377,7,9,0,0,377,88,1,0,0,0,35,0,153,
        170,178,185,191,196,198,204,206,211,217,219,230,239,244,248,253,
        255,259,264,267,272,278,282,287,294,296,302,310,314,320,332,347,
        360,1,6,0,0
    ]

class FalconLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    TEST = 5
    ASSERT = 6
    WINNOW = 7
    GROUPBY = 8
    SATISFY = 9
    LPAREN = 10
    RPAREN = 11
    LBRAC = 12
    RBRAC = 13
    COMMA = 14
    SEMICOLON = 15
    ASSIGN = 16
    BAR = 17
    ABAR = 18
    EBAR = 19
    MBAR = 20
    COLON = 21
    OP_LOGICAL = 22
    OP_AND = 23
    OP_OR = 24
    OP_NOT = 25
    DIRECTIVE = 26
    FNARG = 27
    ID = 28
    OPERATORS = 29
    OP_EQ = 30
    OP_NE = 31
    ARROW = 32
    LABEL = 33
    NUMBER = 34
    STRING = 35
    CODESMNT = 36
    CODEBLOCK = 37
    UMATH = 38
    COMMENT = 39
    MCOMMENT = 40
    WS = 41
    NL = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'~~'", "'Domain'", "'['", "']'", "'Test'", "'Assert'", "'Winnow'", 
            "'Groupby'", "'Satisfy'", "'('", "')'", "'{'", "'}'", "','", 
            "';'", "'|'", "'|>'", "'|!'", "'|%'", "':'", "'='", "'\\n'" ]

    symbolicNames = [ "<INVALID>",
            "TEST", "ASSERT", "WINNOW", "GROUPBY", "SATISFY", "LPAREN", 
            "RPAREN", "LBRAC", "RBRAC", "COMMA", "SEMICOLON", "ASSIGN", 
            "BAR", "ABAR", "EBAR", "MBAR", "COLON", "OP_LOGICAL", "OP_AND", 
            "OP_OR", "OP_NOT", "DIRECTIVE", "FNARG", "ID", "OPERATORS", 
            "OP_EQ", "OP_NE", "ARROW", "LABEL", "NUMBER", "STRING", "CODESMNT", 
            "CODEBLOCK", "UMATH", "COMMENT", "MCOMMENT", "WS", "NL" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "TEST", "ASSERT", "WINNOW", 
                  "GROUPBY", "SATISFY", "LPAREN", "RPAREN", "LBRAC", "RBRAC", 
                  "COMMA", "SEMICOLON", "ASSIGN", "BAR", "ABAR", "EBAR", 
                  "MBAR", "COLON", "OP_LOGICAL", "OP_AND", "OP_OR", "OP_NOT", 
                  "DIRECTIVE", "FNARG", "ID", "OPERATORS", "OP_EQ", "OP_NE", 
                  "ARROW", "LABEL", "NUMBER", "STRING", "CODESMNT", "CODEBLOCK", 
                  "UMATH", "COMMENT", "MCOMMENT", "WS", "NL", "DIGIT", "CHAR" ]

    grammarFileName = "Falcon.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


